package ca.sait.amt.restapplication.entity;
// Generated Jan. 19, 2023, 2:55:38 p.m. by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Transient;

/**
 * DepositForm generated by hbm2java
 */
@Entity
@Table(name = "deposit_form", catalog = "amt")
public class DepositForm implements java.io.Serializable {

	private Integer depositFormId;
	private Invoice invoice;
	private double depositAmount;
	private BillingAddress billingAddress;
	private CreditCardInformation creditCardInformation;
	private String depositFormPhoneNumber;
	private String depositEmailAddress;
	private boolean isDeposit;

	public DepositForm() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "deposit_form_id", unique = true, nullable = false)
	public Integer getDepositFormId() {
		return this.depositFormId;
	}

	public void setDepositFormId(Integer depositFormId) {
		this.depositFormId = depositFormId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JsonBackReference
	@JoinColumn(name = "invoice_id")
	public Invoice getInvoice() {
		return this.invoice;
	}

	public void setInvoice(Invoice invoice) {
		this.invoice = invoice;
	}

	@Column(name = "deposit_amount", nullable = false, precision = 8)
	public double getDepositAmount() {
		return this.depositAmount;
	}

	public void setDepositAmount(double depositAmount) {
		this.depositAmount = depositAmount;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "depositForm",  cascade=CascadeType.ALL)
	@JsonManagedReference
	public BillingAddress getBillingAddress() {
		return billingAddress;
	}

	public void setBillingAddress(BillingAddress billingAddress) {
		this.billingAddress = billingAddress;
	}

	@OneToOne(mappedBy = "depositForm", cascade=CascadeType.ALL)
	@JsonManagedReference
	public CreditCardInformation getCreditCardInformation() {
		return creditCardInformation;
	}

	public void setCreditCardInformation(CreditCardInformation creditCardInformation) {
		this.creditCardInformation = creditCardInformation;
	}

	@Column(name="deposit_form_phone_number")
	public String getDepositFormPhoneNumber() {
		return depositFormPhoneNumber;
	}

	public void setDepositFormPhoneNumber(String depositFormPhoneNumber) {
		this.depositFormPhoneNumber = depositFormPhoneNumber;
	}

	@Column(name="deposit_email_address")
	public String getDepositEmailAddress() {
		return depositEmailAddress;
	}

	public void setDepositEmailAddress(String depositEmailAddress) {
		this.depositEmailAddress = depositEmailAddress;
	}

	@Column(name="is_deposit")
	public boolean isDeposit() {
		return isDeposit;
	}

	public void setDeposit(boolean isDeposit) {
		this.isDeposit = isDeposit;
	}

	@Transient
	public int getInvoiceId() {
		return invoice.getInvoiceId();
	}
	
	
}
